document.addEventListener('DOMContentLoaded', () => {

  const user = {
    name: "–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤",
    balance: 1000,
    inventory: []
  };

  const cases = {
    "New Gifts": ["üéâ 50 –º–æ–Ω–µ—Ç", "üéÅ VIP 1 –¥–µ–Ω—å", "‚ùå –ü—É—Å—Ç–æ", "üîÆ –¢–∞–π–Ω—ã–π –±–æ–Ω—É—Å"],
    "Best": ["üíé 500 –º–æ–Ω–µ—Ç", "üèÜ VIP –Ω–∞ –Ω–µ–¥–µ–ª—é", "üéä –°–µ–∫—Ä–µ—Ç–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç", "‚ùå –ù–∏—á–µ–≥–æ –Ω–µ –≤—ã–ø–∞–ª–æ"]
  };

  const sections = {
    cases: document.getElementById('cases-section'),
    caseOpen: document.getElementById('case-open-section'),
    profile: document.getElementById('profile-section'),
  };

  const caseNameElem = document.getElementById('case-name');
  const animationBox = document.getElementById('animation-box');
  const openBtn = document.getElementById('open-case-btn');
  const prizeResult = document.getElementById('prize-result');
  const backToCasesBtn = document.getElementById('back-to-cases');

  function showSection(sectionKey) {
    Object.keys(sections).forEach(key => {
      if(key === sectionKey) sections[key].classList.remove('hidden');
      else sections[key].classList.add('hidden');
    });
  }

  // –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –º–µ–Ω—é —Å–Ω–∏–∑—É
  document.getElementById('btn-cases').onclick = () => {
    showSection('cases');
    setActiveButton('btn-cases');
  };

  document.getElementById('btn-profile').onclick = () => {
    updateProfile();
    showSection('profile');
    setActiveButton('btn-profile');
  };

  document.getElementById('btn-inventory').onclick = () => {
    alert('–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø–æ–∫–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ!');
  };

  function setActiveButton(id) {
    ['btn-cases','btn-profile','btn-inventory'].forEach(btnId => {
      document.getElementById(btnId).classList.toggle('active', btnId === id);
    });
  }

  function updateProfile() {
    document.getElementById('profile-name').innerText = user.name;
    document.getElementById('profile-balance').innerText = user.balance;
  }

  window.enterCase = function(caseName) {
    caseNameElem.textContent = caseName;
    prizeResult.textContent = "";
    animationBox.classList.remove('glowing');
    openBtn.disabled = false;
    showSection('caseOpen');
    setActiveButton(null);
  };

  function openCase() {
    openBtn.disabled = true;
    prizeResult.textContent = "";
    animationBox.classList.add('glowing');

    setTimeout(() => {
      animationBox.classList.remove('glowing');
      const prizes = cases[caseNameElem.textContent];
      const prize = prizes[Math.floor(Math.random() * prizes.length)];

      user.inventory.push(prize);
      if(prize.includes('–º–æ–Ω–µ—Ç')) {
        const coins = parseInt(prize.match(/\d+/));
        if(coins) user.balance += coins;
      }

      prizeResult.innerHTML = `<strong>–¢—ã –ø–æ–ª—É—á–∏–ª: ${prize}</strong>`;
      updateProfile();
    }, 3000);
  }

  backToCasesBtn.onclick = () => {
    showSection('cases');
    setActiveButton('btn-cases');
  };

  openBtn.onclick = openCase;

  // –ù–∞–∑–Ω–∞—á–∞–µ–º –∫–ª–∏–∫–∏ –Ω–∞ –∫–µ–π—Å—ã
  document.querySelectorAll('.case').forEach(elem => {
    elem.addEventListener('click', () => {
      const caseName = elem.getAttribute('data-case');
      enterCase(caseName);
    });
  });

  // –°—Ç–∞—Ä—Ç–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ ‚Äî –∫–µ–π—Å—ã
  showSection('cases');
  setActiveButton('btn-cases');
  updateProfile();
});
